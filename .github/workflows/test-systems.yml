name: Test systems

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test-systems:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host: [desktop, laptop, vm, vmware-guest]
      fail-fast: false
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v24
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          
    - name: Free up disk space
      run: |
        echo "ðŸ§¹ Freeing up disk space..."
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        df -h
        echo "âœ… Disk space freed"
        
    - name: Setup Cachix
      env:
        CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
      if: env.CACHIX_AUTH_TOKEN != ''
      uses: cachix/cachix-action@v13
      with:
        name: nix-community
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        skipPush: true
        
    - name: Test ${{ matrix.host }} system configuration validity
      run: |
        echo "âœ… Testing ${{ matrix.host }} system configuration validity..."
        nix eval --show-trace .#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel.drvPath
        echo "âœ… ${{ matrix.host }} system configuration is valid"
        
    - name: Test ${{ matrix.host }} system modules load
      run: |
        echo "ðŸ§© Testing ${{ matrix.host }} system modules load..."
        nix eval --show-trace .#nixosConfigurations.${{ matrix.host }}.config.system.nixos.version
        echo "âœ… ${{ matrix.host }} system modules load successfully"
        
    - name: Test ${{ matrix.host }} user configuration
      run: |
        echo "ðŸ‘¤ Testing ${{ matrix.host }} user configuration..."
        nix eval --show-trace .#nixosConfigurations.${{ matrix.host }}.config.users.users.testuser.isNormalUser
        echo "âœ… ${{ matrix.host }} user configuration is valid"
        
    - name: Lightweight build test for vm host only
      if: matrix.host == 'vm'
      run: |
        echo "ðŸ”¨ Running lightweight build test for vm host..."
        nix build --show-trace --no-link .#nixosConfigurations.vm.config.system.build.toplevel --max-jobs 1
        echo "âœ… VM system builds successfully"
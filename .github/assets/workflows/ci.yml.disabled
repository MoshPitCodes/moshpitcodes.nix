name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host: [desktop, laptop]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v24
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          
    - name: Setup Cachix
      if: ${{ secrets.CACHIX_AUTH_TOKEN != '' }}
      uses: cachix/cachix-action@v13
      with:
        name: nix-community
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        skipPush: true
        
    - name: Build ${{ matrix.host }} configuration
      run: |
        echo "Building NixOS configuration for ${{ matrix.host }}"
        nix build .#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel --print-build-logs --show-trace --option accept-flake-config true
        
    - name: Check flake
      run: nix flake check --print-build-logs
      
  format-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v24
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          
    - name: Check formatting
      run: |
        nix develop --command treefmt --fail-on-change --no-cache